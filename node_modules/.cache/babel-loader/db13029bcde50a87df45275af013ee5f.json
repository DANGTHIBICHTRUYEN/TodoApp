{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misad\\\\Documents\\\\TodoApp-main (1)\\\\TodoApp-main\\\\src\\\\components\\\\TodoAppTimeline.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { TodoContext } from '../context/TodoContext';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TodoAppTimeline() {\n  _s();\n\n  const {\n    data,\n    setData\n  } = useContext(TodoContext);\n\n  const completeClick = e => {\n    const newValue = data;\n    newValue[e].isCompleted = true;\n    setData([...newValue]);\n  };\n\n  const incompleteClick = e => {\n    const newValue = data;\n    newValue[e].isCompleted = false;\n    setData([...newValue]);\n  };\n\n  const deleteClick = e => {\n    if (e < 0) return;\n    const newValue = data;\n    newValue.splice(e, 1);\n    setData([...newValue]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#E26A2C\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TODO TIMELINE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VerticalTimeline, {\n      children: data.map((event, idx) => /*#__PURE__*/_jsxDEV(VerticalTimelineElement, {\n        className: \"vertical-timeline-element--work\",\n        date: event.deadline,\n        iconStyle: {\n          background: \"#FF8243\",\n          color: \"#F1F7E7\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"vertical-timeline-element-title\",\n          dangerouslySetInnerHTML: {\n            __html: event.name\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Status: \", event.isCompleted ? 'complete' : 'incomplete']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), !event.isCompleted ? /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            cursor: 'pointer',\n            backgroundColor: 'red',\n            border: 'none',\n            borderRadius: '3px',\n            color: 'white',\n            padding: '5px',\n            textAlign: 'center',\n            display: 'inline-block',\n            fontSize: '15px',\n            paddingLeft: '10px',\n            paddingRight: '10px'\n          },\n          onClick: () => completeClick(idx),\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 43\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            cursor: 'pointer',\n            backgroundColor: 'green',\n            border: 'none',\n            borderRadius: '3px',\n            color: 'white',\n            padding: '5px',\n            textAlign: 'center',\n            display: 'inline-block',\n            fontSize: '15px',\n            paddingLeft: '10px',\n            paddingRight: '10px'\n          },\n          onClick: () => incompleteClick(idx),\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 328\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: '10px',\n            cursor: 'pointer',\n            backgroundColor: 'gray',\n            border: 'none',\n            borderRadius: '3px',\n            color: 'white',\n            padding: '5px',\n            textAlign: 'center',\n            display: 'inline-block',\n            fontSize: '15px',\n            paddingLeft: '10px',\n            paddingRight: '10px'\n          },\n          onClick: () => deleteClick(idx),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoAppTimeline, \"srW7+quWU7nBduuRjDcxOpNkip4=\");\n\n_c = TodoAppTimeline;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoAppTimeline\");","map":{"version":3,"sources":["C:/Users/misad/Documents/TodoApp-main (1)/TodoApp-main/src/components/TodoAppTimeline.js"],"names":["React","useContext","TodoContext","VerticalTimeline","VerticalTimelineElement","TodoAppTimeline","data","setData","completeClick","e","newValue","isCompleted","incompleteClick","deleteClick","splice","backgroundColor","map","event","idx","deadline","background","color","__html","name","cursor","border","borderRadius","padding","textAlign","display","fontSize","paddingLeft","paddingRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { TodoContext } from '../context/TodoContext';\nimport { VerticalTimeline, VerticalTimelineElement} from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\n\nexport function TodoAppTimeline() {\n    const { data, setData } = useContext(TodoContext);\n    const completeClick = (e) => {\n        const newValue = data;\n        newValue[e].isCompleted=true;\n        setData([...newValue]);\n    }\n    const incompleteClick = (e) => {\n        const newValue = data;\n        newValue[e].isCompleted=false;\n        setData([...newValue]);\n    }\n    const deleteClick = (e) => {\n        if(e<0) return;\n        const newValue = data;\n        newValue.splice(e,1);\n        setData([...newValue]);\n    }\n    return (\n        <div style={{ backgroundColor: \"#E26A2C\" }}>\n            <h2>TODO TIMELINE</h2>\n            <VerticalTimeline>\n                {data.map((event, idx) => (\n                <VerticalTimelineElement\n                    className=\"vertical-timeline-element--work\"\n                    date={event.deadline}\n                    iconStyle={{ background: \"#FF8243\", color: \"#F1F7E7\" }}\n                >\n                    <h3\n                    className=\"vertical-timeline-element-title\"\n                    dangerouslySetInnerHTML={{ __html: event.name }}\n                    />\n                    <h4>Status: {event.isCompleted? 'complete' : 'incomplete'}</h4>\n                    {!event.isCompleted? (<button style={{cursor:'pointer', backgroundColor:'red', border:'none', borderRadius:'3px', color:'white', padding: '5px', textAlign: 'center', display:'inline-block', fontSize:'15px', paddingLeft:'10px', paddingRight:'10px'}} onClick = {()=>completeClick(idx)}>Completed</button>) : (<button style={{cursor:'pointer', backgroundColor:'green', border:'none', borderRadius:'3px', color:'white', padding: '5px', textAlign: 'center', display:'inline-block', fontSize:'15px', paddingLeft:'10px', paddingRight:'10px'}} onClick = {()=>incompleteClick(idx)}>Incomplete</button>)}\n                    <button style={{marginLeft:'10px', cursor:'pointer', backgroundColor:'gray', border:'none', borderRadius:'3px', color:'white', padding: '5px', textAlign: 'center', display:'inline-block', fontSize:'15px', paddingLeft:'10px', paddingRight:'10px'}} onClick = {() => deleteClick(idx)}>Delete</button>\n                </VerticalTimelineElement>\n                ))}\n            </VerticalTimeline>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}